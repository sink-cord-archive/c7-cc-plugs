(function(u,h,o,y,d){"use strict";function _(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(s){if(s!=="default"){var t=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,t.get?t:{enumerable:!0,get:function(){return e[s]}})}}),n.default=e,Object.freeze(n)}var a=_(h);const T=o.findByProps("useStateFromStores"),f=o.findByProps("UserSettingsSections"),p=o.findByPropsAll("Messages")[1].Messages,D=o.findByDisplayName("Tooltip"),S=o.findByProps("getAllApplicationActivities"),P=o.findByDisplayName("Monitor"),g=o.findByDisplayName("MobileDevice"),A=o.findByDisplayName("Globe"),N={desktop:P,mobile:g,web:A},E={online:f.Colors.STATUS_GREEN_600,idle:f.Colors.STATUS_YELLOW_500,dnd:f.Colors.STATUS_RED_500},I={online:p.STATUS_ONLINE,idle:p.STATUS_IDLE,dnd:p.STATUS_DND};function m({user:e}){const n=T.useStateFromStores([S],()=>S.getState()?.clientStatuses?.[e.id]||{},[e]),s=[];for(const t of Object.keys(n)){const r=n[t];s.push(a.createElement(D,{text:`${I[r]} on ${t}`},l=>a.createElement(N[t],Object.assign({},l,{color:E[r],width:16,height:16,style:{margin:"1px"}}))))}return!e.bot&&a.createElement("div",{className:"platform-icons-wrapper",style:{marginLeft:"4px"}},s)}const U=o.findByProps("AVATAR_DECORATION_PADDING"),B=o.findByDispNameDeep("PrivateChannel");o.findByDisplayName("AvatarWithText",!1);const M=o.findByProps("UserPopoutInfo");o.findByProps("getDMUserIds"),o.findByProps("getUser","getCurrentUser");const c=[];function O(){const e=d.after("type",U.default,(n,s)=>{e();const t=s.type;c.push(d.after("renderDecorators",t.prototype,(r,l)=>{const{props:i}=l._owner.stateNode;l.props.children.splice(0,0,a.createElement(m,{user:i.user}))}))});c.push(e),c.push(d.after("render",B.prototype,function(n,s){const t=this.props;t.channel?.type===1&&(!t.user||c.push(d.after("children",s.props,(r,l)=>{const i=y.findInReactTree(l,C=>C?.decorators!==void 0);!i||(Array.isArray(i.decorators)||(i.decorators=[i.decorators]),i.decorators.push(a.createElement(m,{user:t.user})))})))})),c.push(d.after("UserPopoutInfo",M,(n,s)=>{const t=y.findInReactTree(s,r=>r.className&&r.className.startsWith("headerText-"));if(t){const r=t.children[1];t.children[1]=a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r,a.createElement(m,{user:r.props.user}))}}))}const v=()=>c.forEach(e=>e());return u.onLoad=O,u.onUnload=v,Object.defineProperty(u,"__esModule",{value:!0}),u})({},cumcord.modules.common.React,cumcord.modules.webpack,cumcord.utils,cumcord.patcher);
